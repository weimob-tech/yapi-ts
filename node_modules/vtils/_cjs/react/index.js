"use strict";

exports.__esModule = true;
var _exportNames = {
  useAsync: true,
  useAsyncFn: true,
  useAsyncRetry: true,
  useAudio: true,
  useBattery: true,
  useBeforeUnload: true,
  useBoolean: true,
  useClickAway: true,
  useCookie: true,
  useCopyToClipboard: true,
  useCounter: true,
  useCss: true,
  useCustomCompareEffect: true,
  useDebounce: true,
  useDeepCompareEffect: true,
  useDefault: true,
  useDrop: true,
  useDropArea: true,
  useEffectOnce: true,
  useEnsuredForwardedRef: true,
  useError: true,
  useEvent: true,
  useFavicon: true,
  useFirstMountState: true,
  useFullscreen: true,
  useGeolocation: true,
  useGetSet: true,
  useGetSetState: true,
  useHarmonicIntervalFn: true,
  useHash: true,
  useHoverDirty: true,
  useIdle: true,
  useIntersection: true,
  useIsomorphicLayoutEffect: true,
  useKey: true,
  useKeyPress: true,
  useKeyPressEvent: true,
  useLatest: true,
  useLifecycles: true,
  useList: true,
  useLocation: true,
  useLockBodyScroll: true,
  useLogger: true,
  useLongPress: true,
  useMap: true,
  useMeasure: true,
  useMedia: true,
  useMediaDevices: true,
  useMediatedState: true,
  useMethods: true,
  useMotion: true,
  useMount: true,
  useMountedState: true,
  useMouse: true,
  useMouseHovered: true,
  useMouseWheel: true,
  useMultiStateValidator: true,
  useNetworkState: true,
  useNumber: true,
  useObservable: true,
  useOrientation: true,
  usePageLeave: true,
  usePermission: true,
  usePrevious: true,
  usePreviousDistinct: true,
  usePromise: true,
  useQueue: true,
  useRaf: true,
  useRafLoop: true,
  useRafState: true,
  useRendersCount: true,
  useScratch: true,
  useScroll: true,
  useScrollbarWidth: true,
  useScrolling: true,
  useSessionStorage: true,
  useSet: true,
  useSetState: true,
  useShallowCompareEffect: true,
  useSize: true,
  useSlider: true,
  useSpeech: true,
  useStartTyping: true,
  useStateList: true,
  useStateValidator: true,
  useStateWithHistory: true,
  useThrottle: true,
  useThrottleFn: true,
  useTimeout: true,
  useTimeoutFn: true,
  useTween: true,
  useUnmount: true,
  useUnmountPromise: true,
  useUpdate: true,
  useUpdateEffect: true,
  useUpsert: true,
  useVibrate: true,
  useVideo: true,
  useWindowScroll: true,
  useToggle: true,
  createGlobalState: true,
  useTitle: true,
  useInterval: true,
  useSearchParam: true,
  useLocalStorage: true,
  useWindowSize: true,
  useHover: true
};
exports.useToggle = exports.useWindowScroll = exports.useVideo = exports.useVibrate = exports.useUpsert = exports.useUpdateEffect = exports.useUpdate = exports.useUnmountPromise = exports.useUnmount = exports.useTween = exports.useTimeoutFn = exports.useTimeout = exports.useThrottleFn = exports.useThrottle = exports.useStateWithHistory = exports.useStateValidator = exports.useStateList = exports.useStartTyping = exports.useSpeech = exports.useSlider = exports.useSize = exports.useShallowCompareEffect = exports.useSetState = exports.useSet = exports.useSessionStorage = exports.useScrolling = exports.useScrollbarWidth = exports.useScroll = exports.useScratch = exports.useRendersCount = exports.useRafState = exports.useRafLoop = exports.useRaf = exports.useQueue = exports.usePromise = exports.usePreviousDistinct = exports.usePrevious = exports.usePermission = exports.usePageLeave = exports.useOrientation = exports.useObservable = exports.useNumber = exports.useNetworkState = exports.useMultiStateValidator = exports.useMouseWheel = exports.useMouseHovered = exports.useMouse = exports.useMountedState = exports.useMount = exports.useMotion = exports.useMethods = exports.useMediatedState = exports.useMediaDevices = exports.useMedia = exports.useMeasure = exports.useMap = exports.useLongPress = exports.useLogger = exports.useLockBodyScroll = exports.useLocation = exports.useList = exports.useLifecycles = exports.useLatest = exports.useKeyPressEvent = exports.useKeyPress = exports.useKey = exports.useIsomorphicLayoutEffect = exports.useIntersection = exports.useIdle = exports.useHoverDirty = exports.useHash = exports.useHarmonicIntervalFn = exports.useGetSetState = exports.useGetSet = exports.useGeolocation = exports.useFullscreen = exports.useFirstMountState = exports.useFavicon = exports.useEvent = exports.useError = exports.useEnsuredForwardedRef = exports.useEffectOnce = exports.useDropArea = exports.useDrop = exports.useDefault = exports.useDeepCompareEffect = exports.useDebounce = exports.useCustomCompareEffect = exports.useCss = exports.useCounter = exports.useCopyToClipboard = exports.useCookie = exports.useClickAway = exports.useBoolean = exports.useBeforeUnload = exports.useBattery = exports.useAudio = exports.useAsyncRetry = exports.useAsyncFn = exports.useAsync = void 0;
exports.useHover = exports.useWindowSize = exports.useLocalStorage = exports.useSearchParam = exports.useInterval = exports.useTitle = exports.createGlobalState = void 0;

var _reactUse = require("react-use");

exports.useAsync = _reactUse.useAsync;
exports.useAsyncFn = _reactUse.useAsyncFn;
exports.useAsyncRetry = _reactUse.useAsyncRetry;
exports.useAudio = _reactUse.useAudio;
exports.useBattery = _reactUse.useBattery;
exports.useBeforeUnload = _reactUse.useBeforeUnload;
exports.useBoolean = _reactUse.useBoolean;
exports.useClickAway = _reactUse.useClickAway;
exports.useCookie = _reactUse.useCookie;
exports.useCopyToClipboard = _reactUse.useCopyToClipboard;
exports.useCounter = _reactUse.useCounter;
exports.useCss = _reactUse.useCss;
exports.useCustomCompareEffect = _reactUse.useCustomCompareEffect;
exports.useDebounce = _reactUse.useDebounce;
exports.useDeepCompareEffect = _reactUse.useDeepCompareEffect;
exports.useDefault = _reactUse.useDefault;
exports.useDrop = _reactUse.useDrop;
exports.useDropArea = _reactUse.useDropArea;
exports.useEffectOnce = _reactUse.useEffectOnce;
exports.useEnsuredForwardedRef = _reactUse.useEnsuredForwardedRef;
exports.useError = _reactUse.useError;
exports.useEvent = _reactUse.useEvent;
exports.useFavicon = _reactUse.useFavicon;
exports.useFirstMountState = _reactUse.useFirstMountState;
exports.useFullscreen = _reactUse.useFullscreen;
exports.useGeolocation = _reactUse.useGeolocation;
exports.useGetSet = _reactUse.useGetSet;
exports.useGetSetState = _reactUse.useGetSetState;
exports.useHarmonicIntervalFn = _reactUse.useHarmonicIntervalFn;
exports.useHash = _reactUse.useHash;
exports.useHoverDirty = _reactUse.useHoverDirty;
exports.useIdle = _reactUse.useIdle;
exports.useIntersection = _reactUse.useIntersection;
exports.useIsomorphicLayoutEffect = _reactUse.useIsomorphicLayoutEffect;
exports.useKey = _reactUse.useKey;
exports.useKeyPress = _reactUse.useKeyPress;
exports.useKeyPressEvent = _reactUse.useKeyPressEvent;
exports.useLatest = _reactUse.useLatest;
exports.useLifecycles = _reactUse.useLifecycles;
exports.useList = _reactUse.useList;
exports.useLocation = _reactUse.useLocation;
exports.useLockBodyScroll = _reactUse.useLockBodyScroll;
exports.useLogger = _reactUse.useLogger;
exports.useLongPress = _reactUse.useLongPress;
exports.useMap = _reactUse.useMap;
exports.useMeasure = _reactUse.useMeasure;
exports.useMedia = _reactUse.useMedia;
exports.useMediaDevices = _reactUse.useMediaDevices;
exports.useMediatedState = _reactUse.useMediatedState;
exports.useMethods = _reactUse.useMethods;
exports.useMotion = _reactUse.useMotion;
exports.useMount = _reactUse.useMount;
exports.useMountedState = _reactUse.useMountedState;
exports.useMouse = _reactUse.useMouse;
exports.useMouseHovered = _reactUse.useMouseHovered;
exports.useMouseWheel = _reactUse.useMouseWheel;
exports.useMultiStateValidator = _reactUse.useMultiStateValidator;
exports.useNetworkState = _reactUse.useNetworkState;
exports.useNumber = _reactUse.useNumber;
exports.useObservable = _reactUse.useObservable;
exports.useOrientation = _reactUse.useOrientation;
exports.usePageLeave = _reactUse.usePageLeave;
exports.usePermission = _reactUse.usePermission;
exports.usePrevious = _reactUse.usePrevious;
exports.usePreviousDistinct = _reactUse.usePreviousDistinct;
exports.usePromise = _reactUse.usePromise;
exports.useQueue = _reactUse.useQueue;
exports.useRaf = _reactUse.useRaf;
exports.useRafLoop = _reactUse.useRafLoop;
exports.useRafState = _reactUse.useRafState;
exports.useRendersCount = _reactUse.useRendersCount;
exports.useScratch = _reactUse.useScratch;
exports.useScroll = _reactUse.useScroll;
exports.useScrollbarWidth = _reactUse.useScrollbarWidth;
exports.useScrolling = _reactUse.useScrolling;
exports.useSessionStorage = _reactUse.useSessionStorage;
exports.useSet = _reactUse.useSet;
exports.useSetState = _reactUse.useSetState;
exports.useShallowCompareEffect = _reactUse.useShallowCompareEffect;
exports.useSize = _reactUse.useSize;
exports.useSlider = _reactUse.useSlider;
exports.useSpeech = _reactUse.useSpeech;
exports.useStartTyping = _reactUse.useStartTyping;
exports.useStateList = _reactUse.useStateList;
exports.useStateValidator = _reactUse.useStateValidator;
exports.useStateWithHistory = _reactUse.useStateWithHistory;
exports.useThrottle = _reactUse.useThrottle;
exports.useThrottleFn = _reactUse.useThrottleFn;
exports.useTimeout = _reactUse.useTimeout;
exports.useTimeoutFn = _reactUse.useTimeoutFn;
exports.useTween = _reactUse.useTween;
exports.useUnmount = _reactUse.useUnmount;
exports.useUnmountPromise = _reactUse.useUnmountPromise;
exports.useUpdate = _reactUse.useUpdate;
exports.useUpdateEffect = _reactUse.useUpdateEffect;
exports.useUpsert = _reactUse.useUpsert;
exports.useVibrate = _reactUse.useVibrate;
exports.useVideo = _reactUse.useVideo;
exports.useWindowScroll = _reactUse.useWindowScroll;

var _CommonComponentProps = require("./CommonComponentProps");

Object.keys(_CommonComponentProps).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _CommonComponentProps[key]) return;
  exports[key] = _CommonComponentProps[key];
});

var _defineComponent = require("./defineComponent");

Object.keys(_defineComponent).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _defineComponent[key]) return;
  exports[key] = _defineComponent[key];
});

var _DeriveComponentProps = require("./DeriveComponentProps");

Object.keys(_DeriveComponentProps).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _DeriveComponentProps[key]) return;
  exports[key] = _DeriveComponentProps[key];
});

var _isVisibleValue = require("./isVisibleValue");

Object.keys(_isVisibleValue).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _isVisibleValue[key]) return;
  exports[key] = _isVisibleValue[key];
});

var _renderComponent = require("./renderComponent");

Object.keys(_renderComponent).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _renderComponent[key]) return;
  exports[key] = _renderComponent[key];
});

var _useClassName = require("./useClassName");

Object.keys(_useClassName).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useClassName[key]) return;
  exports[key] = _useClassName[key];
});

var _useControllableValue = require("./useControllableValue");

Object.keys(_useControllableValue).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useControllableValue[key]) return;
  exports[key] = _useControllableValue[key];
});

var _useEnvironment = require("./useEnvironment");

Object.keys(_useEnvironment).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useEnvironment[key]) return;
  exports[key] = _useEnvironment[key];
});

var _useLoadMore = require("./useLoadMore");

Object.keys(_useLoadMore).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useLoadMore[key]) return;
  exports[key] = _useLoadMore[key];
});

var _useReachBottom = require("./useReachBottom");

Object.keys(_useReachBottom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useReachBottom[key]) return;
  exports[key] = _useReachBottom[key];
});

var _useScrollLoadMore = require("./useScrollLoadMore");

Object.keys(_useScrollLoadMore).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useScrollLoadMore[key]) return;
  exports[key] = _useScrollLoadMore[key];
});

var _useStaged = require("./useStaged");

Object.keys(_useStaged).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useStaged[key]) return;
  exports[key] = _useStaged[key];
});

var _useStateWithDeps = require("./useStateWithDeps");

Object.keys(_useStateWithDeps).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useStateWithDeps[key]) return;
  exports[key] = _useStateWithDeps[key];
});

var _useValidator = require("./useValidator");

Object.keys(_useValidator).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useValidator[key]) return;
  exports[key] = _useValidator[key];
});

var _useToggle = require("./useToggle");

exports.useToggle = _useToggle.useToggle;

var _createGlobalState = require("./createGlobalState");

exports.createGlobalState = _createGlobalState.createGlobalState;

var _useTitle = require("./useTitle");

exports.useTitle = _useTitle.useTitle;

var _useInterval = require("./useInterval");

exports.useInterval = _useInterval.useInterval;

var _useSearchParam = require("./useSearchParam");

exports.useSearchParam = _useSearchParam.useSearchParam;

var _useLocalStorage = require("./useLocalStorage");

exports.useLocalStorage = _useLocalStorage.useLocalStorage;

var _useWindowSize = require("./useWindowSize");

exports.useWindowSize = _useWindowSize.useWindowSize;

var _useHover = require("./useHover");

exports.useHover = _useHover.useHover;