"use strict";

exports.__esModule = true;
exports.useLocalStorage = void 0;

var _taro = require("@tarojs/taro");

var _react = require("react");

var _reactUse = require("react-use");

var useLocalStorage = function useLocalStorage(key, initialState) {
  var getLocalStorageItem = (0, _react.useCallback)(function () {
    try {
      var data = (0, _taro.getStorageSync)(key);

      if (data != null) {
        return JSON.parse(data);
      }

      return initialState;
    } catch (_unused) {
      return initialState;
    }
  }, [key, initialState]);

  var _useState = (0, _react.useState)(getLocalStorageItem),
      state = _useState[0],
      setState = _useState[1];

  var latestKey = (0, _reactUse.useLatest)(key);
  var latestInitialState = (0, _reactUse.useLatest)(initialState);
  var latestState = (0, _reactUse.useLatest)(state);
  (0, _reactUse.useUpdateEffect)(function () {
    setState(getLocalStorageItem());
  }, [key]);
  var set = (0, _react.useCallback)(function (nextState) {
    if (typeof nextState === 'function') {
      nextState = nextState(latestState.current);
    }

    setState(nextState);
    (0, _taro.setStorage)({
      key: latestKey.current,
      data: JSON.stringify(nextState)
    });
  }, []);
  var reset = (0, _react.useCallback)(function () {
    setState(latestInitialState.current);
    (0, _taro.removeStorage)({
      key: latestKey.current
    });
  }, []);
  return [state, set, reset];
};

exports.useLocalStorage = useLocalStorage;