"use strict";

exports.__esModule = true;
exports.enUS = void 0;

var _yup = require("../yup");

/* istanbul ignore file */
// ref: https://github.com/jquense/yup/blob/master/src/locale.js
var enUS = {
  mixed: {
    default: '${path} is invalid',
    required: '${path} is a required field',
    oneOf: '${path} must be one of the following values: ${values}',
    notOneOf: '${path} must not be one of the following values: ${values}',
    defined: '${path} must be defined',
    notType: function notType(_ref) {
      var path = _ref.path,
          type = _ref.type,
          value = _ref.value,
          originalValue = _ref.originalValue;
      var isCast = originalValue != null && originalValue !== value;
      var msg = [path + " must be a `" + type + "` type, ", "but the final value was: `" + _yup.yup.printValue(value, true) + "`", !isCast ? '.' : " (cast from the value `" + _yup.yup.printValue(originalValue, true) + "`).", value !== null ? '' : '\n If "null" is intended as an empty value be sure to mark the schema as `.nullable()`'].filter(Boolean).join('');
      return msg;
    }
  },
  string: {
    length: '${path} must be exactly ${length} characters',
    min: '${path} must be at least ${min} characters',
    max: '${path} must be at most ${max} characters',
    matches: '${path} must match the following: "${regex}"',
    email: '${path} must be a valid email',
    url: '${path} must be a valid URL',
    trim: '${path} must be a trimmed string',
    lowercase: '${path} must be a lowercase string',
    uppercase: '${path} must be a upper case string',
    chineseIDCardNumber: '${path} must be a Chinese identity card number',
    chineseMobilePhoneNumber: '${path} must be a Chinese mobile phone number'
  },
  number: {
    min: '${path} must be greater than or equal to ${min}',
    max: '${path} must be less than or equal to ${max}',
    lessThan: '${path} must be less than ${less}',
    moreThan: '${path} must be greater than ${more}',
    positive: '${path} must be a positive number',
    negative: '${path} must be a negative number',
    integer: '${path} must be an integer',
    id: '${path} must be a positive integer'
  },
  date: {
    min: '${path} field must be later than ${min}',
    max: '${path} field must be at earlier than ${max}'
  },
  boolean: {},
  object: {
    noUnknown: '${path} field has unspecified keys: ${unknown}'
  },
  array: {
    min: '${path} field must have at least ${min} items',
    max: '${path} field must have less than or equal to ${max} items'
  }
};
exports.enUS = enUS;