import { useCallback } from 'react';
import { useLatest } from 'react-use';
import { useStateWithDeps } from "./useStateWithDeps";
/**
 * 暂存状态。
 */

export function useStaged(value, setValue) {
  var _useStateWithDeps = useStateWithDeps(value, [value]),
      stagedState = _useStateWithDeps[0],
      setStagedState = _useStateWithDeps[1];

  var valueRef = useLatest(value);
  var setValueRef = useLatest(setValue);
  var stagedStateRef = useLatest(stagedState);
  var commitStagedState = useCallback(function () {
    setValueRef.current(stagedStateRef.current);
  }, []);
  var resetStagedState = useCallback(function () {
    setStagedState(valueRef.current);
  }, []);
  return [stagedState, {
    set: setStagedState,
    commit: commitStagedState,
    reset: resetStagedState
  }];
}